@charset "UTF-8";
/* -------------------------------------- */
/* -------------------------------------- */
/*            Lightbox and Modals         */
/* -------------------------------------- */
/* -------------------------------------- */
#light_box_cover {
  position: fixed;
  top: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

#light_box_modal {
  pointer-events: none;
  position: fixed;
  opacity: 0;
  top: 50px;
  left: 50%;
  transform: translate(-50%, 0);
  display: inline-block;
  width: 750px;
  height: 85%;
  background-color: #efecea;
  border-radius: 7px;
}

#light_box_modal .icon {
  font-size: 3em;
}

#light_box_modal.active {
  pointer-events: auto;
  opacity: 1;
  z-index: 100;
}

/* Modal for Scene Create. Should be simple */
#light_box_modal[object=scene] {
  display: flex;
  flex-direction: column;
  width: 450px;
  height: auto;
}

#light_box_modal[object=scene] .scene_form_content {
  display: flex;
  flex-direction: column;
  padding: 10px 30px;
}

#light_box_modal .header {
  padding: 10px 30px;
  border-bottom: 1px solid #d1d1d1;
}

/* Modal for Frame Edit */
#light_box_modal .frame_content {
  padding: 20px;
}

#light_box_modal #field_frame_image {
  overflow: hidden;
  position: relative;
  border-top-left-radius: 7px;
  border-top-right-radius: 7px;
  min-height: 200px;
  background-color: #403f3f;
  text-align: center;
}
#light_box_modal #field_frame_image img {
  margin: 0 auto;
  height: 300px;
}

.editable_field {
  display: flex;
  margin-bottom: 8px;
}

.editable_field .field_label {
  font-weight: bold;
  padding: 12px;
  color: #744558;
}

.editable_field.read_only .field_label {
  color: #938f8f;
}

.editable_field .field_value {
  position: relative;
  flex-grow: 1;
  border-radius: 5px;
  border-top: 3px solid transparent;
  border-left: 3px solid transparent;
  padding: 12px;
}

.editable_field .field_value:not(.read_only):hover {
  background-color: #e1d9d8;
}

.editable_field .field_value.editing {
  position: relative;
  display: flex;
  flex-grow: 1;
  border-radius: 5px;
  box-sizing: border-box;
  background-color: white;
  border-top: 3px solid #c2b8cb;
  border-left: 3px solid #c2b8cb;
}

.editable_field .field_value.editing:hover {
  background-color: white;
}

.editable_field .field_value input[type=text] {
  flex-grow: 1;
  background-color: transparent;
  border: 0px solid;
}

.editable_field .field_value input[type=text]:focus {
  outline: none;
}

/* ----- REACT version ------- */
#lightbox_bg {
  pointer-events: none;
  opacity: 0;
  position: fixed;
  top: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 100%;
  z-index: 10;
  /* LightBox not always rendered last */
  background-color: rgba(0, 0, 0, 0.5);
  transition-property: opacity;
  transition-duration: 0.3s;
}

#lightbox_bg.active {
  pointer-events: auto;
  opacity: 1;
}

#lightbox_bg.active.intangible {
  pointer-events: none;
}

/*
███████╗██████╗ ██╗███╗   ██╗███╗   ██╗███████╗██████╗ 
██╔════╝██╔══██╗██║████╗  ██║████╗  ██║██╔════╝██╔══██╗
███████╗██████╔╝██║██╔██╗ ██║██╔██╗ ██║█████╗  ██████╔╝
╚════██║██╔═══╝ ██║██║╚██╗██║██║╚██╗██║██╔══╝  ██╔══██╗
███████║██║     ██║██║ ╚████║██║ ╚████║███████╗██║  ██║
╚══════╝╚═╝     ╚═╝╚═╝  ╚═══╝╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝*/
/* NOTE: 'spinny' is old. It's Jquery+CSS animation. */
/*       Scroll down to find 'spinner', which is a React component */
.spinny {
  position: relative;
  display: flex;
  /* The setting below will be controlled by the 
     class Spinny. See MASTER.js */
  /*
  min-width: 400px; max-width: 400px; 
  min-height: 250px;
  background-color:#e5e5e5;
  */
}

.spinny span {
  flex-grow: 1;
  /*there is only one span, so this shouldn't really matter. */
  display: inline-block;
  position: absolute;
  width: 30px;
  height: 30px;
  background-color: white;
  top: 50%;
  left: 50%;
  transform-origin: 50% 50%;
  vertical-align: middle;
  margin: 0 auto;
  /* animation */
  animation-name: loading_square;
  animation-duration: 0.4s;
  animation-iteration-count: infinite;
  animation-timing-function: "ease-in-out-quart";
}

/* -ms-transform: rotate(3deg); 
    -webkit-transform: rotate(3deg); 
    transform: rotate(3deg);
  */
@keyframes loading_square {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(90deg);
  }
}
#msg_loading {
  display: inline-block;
  width: 100%;
  height: 100%;
}

#loading_bar_wrapper {
  position: absolute;
  display: inline-block;
  width: 200px;
  height: 15px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border: 1px solid rgba(255, 255, 255, 0.3);
  margin-top: 55px;
}

#loading_bar_wrapper #loading_bar {
  display: block;
  width: 0%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.25);
  border: 2px solid #1d1e1f;
  transition-property: width;
  transition-duration: 0.2s;
}

.spinner_playground {
  /* container that stretched out to fill the whole wrapper/container */
  /* This is actually copied from my node project. Check "modal.css" */
  display: flex;
  width: 100%;
  height: 100%;
  min-width: 150px;
  min-height: 150px;
  /*to fit spinner*/
  flex-grow: 1;
  /*stretches to fit the height*/
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.spinner_playground .spinner {
  /*loading symbol*/
  display: inline-block;
  width: 100px;
  height: 100px;
  /*animation: loading 600ms infinite cubic-bezier(0.190, 1.000, 0.220, 1.000);*/
  animation: loading 1000ms infinite cubic-bezier(0.19, 1, 0.22, 1);
}

@keyframes loading {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(45deg);
  }
  100% {
    transform: rotate(90deg);
  }
}
.spinner.light {
  background-color: #e1e1e1;
}

.spinner.dark {
  background-color: #5c5c5c;
}

.spinner_playground.float {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
}

.spinner_playground .spinner.dead {
  animation: none !important;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*             React lightbox             */
/* -------------------------------------- */
/* -------------------------------------- */
#curtain {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 3em;
  height: 3em;
  background-color: #1d1e1f;
  opacity: 1;
  /*becomes visible by script*/
  border-radius: 50%;
}

/*http://patorjk.com/software/taag/#p=display&f=ANSI%20Shadow&t=Flipbook*/
/*
███████╗██╗     ██╗██████╗ ██████╗  ██████╗  ██████╗ ██╗  ██╗
██╔════╝██║     ██║██╔══██╗██╔══██╗██╔═══██╗██╔═══██╗██║ ██╔╝
█████╗  ██║     ██║██████╔╝██████╔╝██║   ██║██║   ██║█████╔╝ 
██╔══╝  ██║     ██║██╔═══╝ ██╔══██╗██║   ██║██║   ██║██╔═██╗ 
██║     ███████╗██║██║     ██████╔╝╚██████╔╝╚██████╔╝██║  ██╗
╚═╝     ╚══════╝╚═╝╚═╝     ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝  ╚═╝
                                                             */
/* UI for flipbook / player */
.flipbook_player {
  display: flex;
  /*to center the stage*/
  justify-content: center;
  flex-wrap: wrap;
}

.flipbook_player .frame_window {
  /* only shows only frame at a time with overflow trick*/
  /* Width and height is set by FrameStage React component*/
  /*height: 500px;*/
  overflow: hidden;
  position: relative;
  cursor: pointer;
}

.flipbook_player .frame_stage {
  /* container that shows all strips*/
  /*width should wrap tight around frames */
  display: flex;
  /*to..do something with the frame*/
  flex-direction: column;
  /*all strip listed vertically */
  flex-grow: 1;
  /* max-width: 800px; height: 500px; */
  /* DO NOT SET WIDTH, HEIGHT HERE. It's a flex container.
     Width and height is set by React app onto .frame_window instead. */
  user-drag: none;
  user-select: none;
}

.flipbook_player .frame_stage .strip {
  display: flex;
  flex-direction: column;
}

.flipbook_player .frame_stage .strip .frame {
  flex-grow: 1;
  width: 100%;
}

.flipbook_player .frame_stage .strip .frame.empty {
  height: 2000px;
  /* arbitary height to ensure next frame is not visible */
  text-align: center;
  padding-top: 50px;
}

.flipbook_player .frame_scrubber .scrubber {
  max-width: 800px;
  margin: 0 auto;
}

/* Things in frame_window decoration float over the frame_window */
.frame_window_decorations {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.flipbook_player .player_instruction {
  /* this div overlaps over .frame_window*/
  display: flex;
  flex-direction: column;
  justify-content: center;
  background-color: #1d1e1f;
  width: 100%;
  height: 100%;
  font-size: 2em;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  padding: 0 0 50px 0;
}

.flipbook_player .player_instruction span {
  text-align: center;
}

.flipbook_player .standby_cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: "img/slashes_h.png";
}

/*
███████╗██╗     ██╗██████╗ ██████╗  ██████╗  ██████╗ ██╗  ██╗    ███╗   ███╗██╗███╗   ██╗██╗
██╔════╝██║     ██║██╔══██╗██╔══██╗██╔═══██╗██╔═══██╗██║ ██╔╝    ████╗ ████║██║████╗  ██║██║
█████╗  ██║     ██║██████╔╝██████╔╝██║   ██║██║   ██║█████╔╝     ██╔████╔██║██║██╔██╗ ██║██║
██╔══╝  ██║     ██║██╔═══╝ ██╔══██╗██║   ██║██║   ██║██╔═██╗     ██║╚██╔╝██║██║██║╚██╗██║██║
██║     ███████╗██║██║     ██████╔╝╚██████╔╝╚██████╔╝██║  ██╗    ██║ ╚═╝ ██║██║██║ ╚████║██║
╚═╝     ╚══════╝╚═╝╚═╝     ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝  ╚═╝    ╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝╚═╝*/
/* Small version of flipbook used as preview in SceneEditor */
.strip_preview_container {
  display: flex;
  /* for vertical centering */
  height: 0;
  width: 100%;
  overflow: hidden;
  border: 0px solid;
  background-color: #3c3c3c;
  transition: height 0.2s ease-out;
  /*transition-property: max-height;
    transition-duration: 0.3s;*/
}

.strip_preview_container.active {
  border-bottom: 1px solid #ddd;
  /*height: 180px;*/
  /* Height is dynamically determined in the FramePreviewCard*/
}

.strip_preview_container .msg {
  align-self: center;
  color: #a2a2a2;
  text-align: center;
}

.float_btn {
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 10px;
  font-size: 3em;
}

.float_btn:hover {
  color: #e1e1e1;
}

form select[invisible],
form textarea[invisible] {
  display: none;
}

form button[type=submit] {
  background-color: #826e72;
  border: 0px;
  border-bottom: 4px solid #615154;
}

#demo_chapter_create_form,
#scene_create_form,
#strip_create_form,
#frame_create_form {
  display: none;
  width: 0;
  height: 0;
  opacity: 0;
  pointer-events: none;
  overflow: hidden;
}

/* Frame Edit Form elements */
#frame_image_form {
  background-color: #efedeb;
}

#frame_image_form #field_frame_image {
  background-color: #4a4949;
  padding: 7px;
}

#frame_image_form #field_frame_image .field_value {
  display: block;
  text-align: center;
  width: 100%;
  /*min-height: 250px;
  max-height: 450px;*/
  /* Cannot use min/max height for image size to auto fit */
  height: 400px;
}

#frame_image_form #field_frame_image .field_value img {
  max-width: 100%;
  max-height: 100%;
  border: 1px solid #292929;
  outline-offset: 5px;
}

#loading_msg {
  display: none;
  text-shadow: #ffbf91 0px 0 15px;
}

#loading_msg.active {
  display: inline-block;
}

html, body {
  /* keep these property to make flexbox fill whole screen*/
  margin: 0;
  height: 100%;
  scroll-behavior: smooth;
}

body {
  background-color: #efecea;
  height: 100%;
  padding-bottom: 60px;
  /*for footer*/
  /*font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;*/
  font-family: "Quicksand", sans-serif;
  color: #808080;
  /* used when just the background needs to be darkened */
  transition-property: background-color;
  transition-duration: 0.5s;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*        globally used text styles       */
/* -------------------------------------- */
/* -------------------------------------- */
.bigtext-1 {
  font-size: 3em;
}

.bigtext-2 {
  font-size: 2em;
}

.bigtext-3 {
  font-size: 1.2em;
}

.color.red {
  /* TODO: would be nice if I could use variables here */
  color: #b97682;
}

.blurred {
  filter: blur(0.6px);
}

.dimmed {
  opacity: 0.4;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*                Base layout             */
/* -------------------------------------- */
/* -------------------------------------- */
.flexy_content_wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  /*padding-bottom: 60px; /*height of footer*/
}

/* in a columned layout, the contents stretched to fill the rest of the page */
.flexy_content_wrapper.columned .container {
  /* stretched to fill rest of screen*/
  display: flex;
  flex-grow: 1;
  flex-basis: auto;
}

.flexy_content_wrapper.columned .container .row {
  /* ALSO stretched to fill rest of screen*/
  display: flex;
  flex-grow: 1;
  flex-basis: auto;
}

.flexy_content_wrapper.columned .container .right_column {
  /* ALSO stretched to fill rest of screen*/
  flex-grow: 1;
  flex-basis: auto;
  padding-bottom: 50px;
  border-left: 1px solid #cfcfcf;
}

.flexy_content_wrapper.columned .container .left_column,
.flexy_content_wrapper.columned .container .right_column {
  padding-top: 15px;
}

.headband_wrapper {
  /* I was going to call this 'header' but that name is used in other places */
  display: flex;
  justify-content: space-between;
  min-height: 60px;
  padding: 0px 60px;
  border-bottom: 1px solid #1d1e1f26;
}

.headband_wrapper.disabled {
  display: none;
}

.headband_wrapper.dark {
  background-color: #2f2f2f;
}

.headband_wrapper.with_splash {
  /* special case where headband has splash image in it*/
  padding: 0px;
}

.headband {
  align-self: center;
  padding: 0 20px;
}

.splash {
  height: 180px;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  flex-grow: 1;
  overflow: hidden;
  filter: blur(10px);
  opacity: 0.5;
}

.splash_float {
  height: 180px;
  /* must match with .splash */
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: center;
  width: 100%;
  text-align: center;
  color: white;
}

.splash_float a {
  color: white;
  opacity: 0.7;
  transition: opacity 0.3s;
}

.splash_float a:hover {
  color: white;
  opacity: 1;
}

.letterbox {
  display: block;
  width: 100%;
  background-color: #1e1e1e;
}

.footer {
  display: flex;
  flex-grow: 1;
  /*will fill the rest of the page */
  /*margin-top: -60px; /*footer is not part of the flexbox*/
  /* using padding-bottom on body instead*/
}

.footer span {
  text-align: right;
  align-self: flex-end;
  display: block;
  height: 60px;
  width: 100%;
  background-color: #c7c2c2;
  padding: 20px;
  color: #5d4f4f;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*             showcase layout            */
/* -------------------------------------- */
/* -------------------------------------- */
.contentbox {
  /* hoping that this will replace bootstrap's 'container' */
}

.contentbox.centering {
  /* Note: the main wrapper (parent) is flexbox */
  flex-grow: 1;
  display: flex;
  flex-flow: column;
  justify-content: center;
  color: white;
}

.contentbox.centering .hideable_content {
  margin: 0 auto;
  padding-bottom: 90px;
  color: #cab6a1;
  max-width: 450px;
  display: none;
  /*initially hidden*/
}

/* -------------------------------------- */
/* -------------------------------------- */
/*          generic views stuff           */
/* -------------------------------------- */
/* -------------------------------------- */
.book-list {
  padding: 0;
}

.book-list li {
  list-style: none;
  margin: 5px 0 0 0;
}

.book-list .card-link.wide {
  /*the <a>*/
  display: block;
  height: 150px;
  background-color: PaleTurquoise;
}

.book-list .card-link.wide:hover {
  background-color: #baf4f4;
}

.book-list .card-link.wide span:nth-of-type(1) {
  display: inline-block;
  background-color: DarkTurquoise;
  height: 100%;
  padding: 0 20px 0 15px;
  font-size: 2em;
  -webkit-clip-path: polygon(0 0, 100% 0%, 70% 100%, 0% 100%);
  clip-path: polygon(0 0, 100% 0%, 70% 100%, 0% 100%);
}

.book-list .card-link.wide[inActive=true] {
  background-color: LightGray;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*         form and msg related           */
/* -------------------------------------- */
/* -------------------------------------- */
.placeholder {
  display: inline-block;
  width: 100px;
  height: 60px;
  border: 1px solid #ccc;
  vertical-align: middle;
}

.placeholder.new {
  border: 1px solid blue;
}

.message_container {
  position: absolute;
  top: -100%;
  left: 50%;
  transition: top 2s;
}

.message {
  display: inline-block;
  height: 80px;
  width: 600px;
  background-color: white;
  position: relative;
  left: -50%;
}

@media (min-width: 768px) {
  .container {
    width: 750px;
  }
}
@media (min-width: 992px) {
  .container {
    width: 970px;
  }
}
.container {
  padding-right: 15px;
  padding-left: 15px;
  margin-left: auto;
  margin-right: auto;
}

.popup_menu {
  pointer-events: none;
  position: absolute;
  top: 50px;
  right: -10px;
  width: 150px;
  z-index: 1000;
  opacity: 0;
}

.popup_menu.active {
  pointer-events: auto;
  opacity: 1;
}

.popup_menu ul {
  display: flex;
  flex-direction: column;
  width: 100%;
  background-color: #826e72;
  border-radius: 5px;
  border: 0px solid #5e4e50;
  border-bottom: 4px solid #5e4e50;
  padding: 0;
}

.popup_menu ul li {
  cursor: pointer;
  font-weight: normal;
  font-size: 12pt;
  list-style-type: none;
  border-bottom: 1px solid #685656;
  margin: 0;
  padding: 10px;
  color: #ede5e5;
}

.popup_menu ul li:first-child {
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.popup_menu ul li:last-child {
  border-bottom: 0px solid;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}

.popup_menu ul li:hover {
  background-color: #444141;
}

.popup_menu ul li.disabled {
  position: relative;
  cursor: default;
  color: #4a3d3d;
}

.popup_menu ul li.disabled:hover {
  background-color: transparent;
}

.popup_menu ul li.disabled.wip::after {
  /* subset of .disabled that shows "coming soon"*/
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-align: center;
  content: "Coming soon";
  background-color: #9a8b8bb0;
  color: white;
  opacity: 0;
  transition-property: opacity;
  transition-duration: 0.3s;
}

.popup_menu ul li.disabled.wip:hover::after {
  opacity: 1;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*         popup for frame thumbs         */
/* -------------------------------------- */
/* -------------------------------------- */
.thumb .popup_menu {
  top: 35px;
  right: 75px;
  transform-origin: top right;
  transform: translate(100%, 0%);
}

.thumb .popup_menu:focus {
  outline: none;
}

/*
.thumb .popup_menu .tickmark{
    position:absolute;
    
    bottom: -14px; left: 50%;
    width: 0; 
    height: 0; 
    border-left: 15px solid transparent;
    border-right: 15px solid transparent;
  
    border-top: 15px solid #5C5C5C;
}*/
/* -------------------------------------- */
/* -------------------------------------- */
/*               scene list               */
/* -------------------------------------- */
/* -------------------------------------- */
ul.list_scenes {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  list-style: none;
}

ul.list_scenes .scene_container {
  display: flex;
  flex-direction: column;
  /* flex: 1; make all container same width*/
  /*min-width: 200px;
  max-width: 210px;*/
  /* Or just set a width */
  width: 240px;
  margin: 3px;
  /*color: white;*/
}

.scene_container .flex_item:last-child {
  margin-top: auto;
  /*flushes to the bottom*/
}

.scene_container .letter_box_button {
  /* contains letter-boxed preview and title */
  display: flex;
  position: relative;
  flex-direction: column;
  cursor: pointer;
}

.letter_box_button .header {
  padding: 3px 12px 10px 12px;
  background-color: #2f2f2f;
  color: #7d7d7d;
  margin-top: -10px;
  position: relative;
  /* hack-ish solution to make sure this element
     is above preview_container */
  transition-property: background-color, color;
  transition-duration: 0.3s;
}

.letter_box_button:hover .header {
  color: white;
  background-color: black;
}

.letter_box_button .header a {
  text-decoration: none;
}

.letter_box_button .preview_container {
  /* big <a> */
  position: relative;
  overflow: hidden;
  height: 150px;
  /* width set to be even at .scene_container*/
  box-sizing: border-box;
  border-top: 20px solid #2f2f2f;
  border-bottom: 20px solid #2f2f2f;
  background-color: #2f2f2f;
  transition-property: border;
  transition-duration: 0.3s;
}

.letter_box_button:hover .preview_container {
  border-top: 30px solid black;
  border-bottom: 30px solid black;
}

.letter_box_button .preview_container .preview {
  position: absolute;
  display: inline-block;
  width: 100%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.letter_box_button .description {
  padding: 8px;
  color: #9c9c9c;
}

.letter_box_button .scene_edit {
  position: absolute;
  bottom: 0px;
  right: 0px;
  margin: 10px;
}

.scene_container .timestamp {
  padding: 3px;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*            scene list MINI             */
/* -------------------------------------- */
/* -------------------------------------- */
ul.list_scenes_mini {
  display: flex;
  flex-flow: column;
  justify-content: center;
  margin: 20px 0 0 0;
  padding: 0;
  list-style: none;
}

ul.list_scenes_mini li {
  margin: 0 auto;
  padding-bottom: 5px;
}

ul.list_scenes_mini li .preview {
  position: relative;
  display: inline-block;
  height: 70px;
  width: 70px;
  overflow: hidden;
  border: 3px solid transparent;
  /* allows preview to have thick border highlight
     without changing the size of the box*/
  border-radius: 5px;
}

ul.list_scenes_mini li .preview span {
  width: 100%;
}

ul.list_scenes_mini .mini_scene {
  /*the <a> tag*/
  display: flex;
  flex-direction: row;
  position: relative;
  /* there is a floating tickmark*/
  border-radius: 5px;
  background-color: #d2c1c4;
  transition-property: background;
  transition-duration: 0.3s;
}

ul.list_scenes_mini .mini_scene:hover {
  background-color: #ff8982;
}

ul.list_scenes_mini .mini_scene.current {
  pointer-events: none;
  background-color: #bca9a9;
}

ul.list_scenes_mini .mini_scene.current::after {
  position: absolute;
  top: 20px;
  right: -10px;
  content: "";
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent;
  border-left: 10px solid #bca9a9;
}

.mini_scene .mini_scene_label {
  color: white;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*               strip lists             */
/* -------------------------------------- */
/* -------------------------------------- */
ul.list_strips {
  padding: 0;
  counter-reset: stripNum;
}

ul.list_strips:focus {
  outline: none;
}

ul.list_strips li.strip_card {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  position: relative;
  counter-increment: stripNum;
  border-bottom: 5px solid #c5c5c5;
  margin-bottom: 10px;
}

.strip_card:focus {
  outline: none;
}

ul.list_strips li.spotlighted {
  /* raises z-index above the lightbox cover */
  z-index: 1000;
}

.strip_card.draggable-mirror .strip_flex_toolbar,
.strip_card.draggable-mirror .strip_content {
  /* transform on this doesn't work on .draggable-mirror directly
     because transform property already taken by draggable js*/
  transform: rotate(3deg);
}

.strip_card.draggable-source--is-dragging .strip_flex_toolbar,
.strip_card.draggable-source--is-dragging .strip_content {
  opacity: 0;
}

.strip_card.draggable-source--is-dragging {
  opacity: 0.3;
  background-color: black;
}

.strip_content {
  /*I added this container to wrap .strip_flex_container 
  due to nesting issue when rendering in React */
  position: relative;
}

.strip_flex_container {
  /*Main flex container for a single srip*/
  position: relative;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  align-items: stretch;
  background-color: white;
}

.strip_flex_container:focus {
  outline: none;
}

/*
███████╗██████╗  █████╗ ███╗   ███╗███████╗████████╗██╗  ██╗██╗   ██╗███╗   ███╗██████╗ 
██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝╚══██╔══╝██║  ██║██║   ██║████╗ ████║██╔══██╗
█████╗  ██████╔╝███████║██╔████╔██║█████╗     ██║   ███████║██║   ██║██╔████╔██║██████╔╝
██╔══╝  ██╔══██╗██╔══██║██║╚██╔╝██║██╔══╝     ██║   ██╔══██║██║   ██║██║╚██╔╝██║██╔══██╗
██║     ██║  ██║██║  ██║██║ ╚═╝ ██║███████╗   ██║   ██║  ██║╚██████╔╝██║ ╚═╝ ██║██████╔╝
╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚═════╝ */
.strip_flex_container .thumb,
.strip_flex_container .tile {
  display: flex;
  position: relative;
  /*allows mini menu*/
  align-items: center;
  justify-content: center;
  margin: 10px 5px;
  height: auto;
  /*stretches to fit the flex container */
  border: 1px solid #f1f1f1;
  border-bottom: 3px solid #dddddd;
}

.thumb:focus {
  outline: none;
}

.thumb .frame_image {
  cursor: pointer;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-size: contain;
  background-repeat: no-repeat;
}

.thumb .frame_image.stretch {
  /* used to stretch the container size to fit the thumbnail */
  position: relative;
  opacity: 0;
  min-width: 110px;
}

.thumb.blurred {
  /* special case for now. 
     Used to indicate empty scene in chapter detail. */
  filter: blur(0.6px);
}

/* sortable style*/
.thumb.draggable-mirror .frame_image {
  /* transform on this doesn't work on .draggable-mirror directly
     because transform property already taken by draggable js*/
  transform: rotate(7deg);
}

.thumb.draggable-source--is-dragging {
  opacity: 0.5;
}

.thumb.draggable--over {
  opacity: 0.5;
}

.thumb .overlay_box {
  position: absolute;
  top: -15px;
  left: 0;
  display: block;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  text-align: right;
  padding: 3px 5px;
  color: white;
  opacity: 0;
  transition-property: opacity top;
  transition-duration: 0.2s;
}

.thumb:hover .overlay_box {
  /*small menu that pops up when you hover over .thumb*/
  opacity: 1;
  top: 0px;
  z-index: 1;
  /*places it over the "slashes" layer */
}

.thumb:hover .overlay_box a {
  color: white;
  font-size: 1.2em;
  margin: 0px 2px;
}

.thumb:hover .overlay_box a:hover {
  text-decoration: none;
  color: #bcf2f2;
}

.thumb .slashes {
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("img/slashes.png");
  opacity: 0;
}

.thumb.ignore .slashes {
  opacity: 1;
}

.thumb.dying {
  /* this is when thumb is about to be deleted */
  background-color: black;
}

.thumb.dying .frame_image {
  opacity: 0.5;
}

.thumb .overlay_box .mini_menu {
  /*small menu that pops up when you hover over .thumb*/
  font-size: 1.2em;
}

.thumb.placeholder {
  /* style for .thumb box that has no image */
  width: 150px;
  height: 100%;
  border: 3px dashed #d8cece;
  background-color: #ededed;
}

.strip_flex_toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 6px 12px;
  text-align: right;
  background-color: white;
  border-bottom: 1px solid #ddd;
}

.strip_card .strip_flex_toolbar .tools {
  opacity: 0.1;
  transition-property: opacity;
  transition-duration: 0.2s;
}

.strip_flex_toolbar .menu_btn {
  position: relative;
  /* icon size */
  font-size: 1.6em;
  margin: 0 4px;
  color: #859297;
  cursor: pointer;
}

.strip_flex_toolbar .menu_btn:hover {
  color: #545b5d;
  text-decoration: none;
}

.menu_btn.disabled {
  opacity: 0.5;
}

.menu_btn.disabled:hover {
  color: #859297;
  cursor: default;
}

.strip_card:hover .strip_flex_toolbar .tools {
  opacity: 1;
}

.mtooltip {
  font-family: "Quicksand", sans-serif;
  position: absolute;
  pointer-events: none;
  top: -35px;
  left: -20px;
  display: inline-block;
  background-color: #9e8f8f;
  width: 100px;
  height: 40px;
  padding: 12px 0px;
  text-align: center;
  font-size: 10pt;
  border-radius: 5px;
  color: white;
  opacity: 0;
  transition-property: opacity, top;
  transition-duration: 0.2s;
}

.mtooltip::after {
  position: absolute;
  bottom: -10px;
  left: 20px;
  content: "";
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-top: 10px solid #9e8f8f;
}

.menu_btn:hover .mtooltip {
  top: -54px;
  opacity: 1;
}

/*modified thumb or tile*/
.strip_flex_container .thumb.incompatible {
  /* This was a quick and easy way to make the .thumb slender
     but this also prevents popup menu from being visible*/
  /* overflow: hidden;*/
  border-left: 5px solid red;
}

.strip_flex_container .thumb.incompatible img {
  -webkit-filter: grayscale(1);
  filter: grayscale(1);
}

.strip_flex_container .thumb.placeholder2 {
  border: 3px solid #d8abab;
  background-color: #ffe8e0;
  width: 120px;
  height: auto;
}

.strip_flex_container .thumb.placeholder2 span {
  color: #af6262;
}

.strip_flex_container .tile[displaytype=add] {
  background-color: #D1D1D1;
  /*width: 60px;*/
  padding: 0 10px;
  height: auto;
  color: #545454;
  cursor: pointer;
}

.strip_flex_container .tile[displaytype=add]:hover {
  background-color: #bcbcbc;
}

ul.list_strips .strip_flex_container .tile.empty-strip {
  border: 0px solid;
  width: 100%;
}

.strip_flex_container .tile.empty-strip span {
  width: 100%;
  height: 100px;
  text-align: center;
}

.strip_flex_editor {
  border-top: 1px solid #ddd;
  background-color: #f5f5f5;
  padding: 10px;
}

/* loading strips. Just gray blocks */
ul.loading_strips li {
  display: inline-block;
  height: 150px;
  width: 100%;
  margin-bottom: 20px;
  background-color: #c7c7c7;
}

/*
 ██████╗ █████╗ ██████╗ ██████╗  ██████╗ ██████╗ ██╗   ██╗███████╗██████╗ ███████╗
██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔═══██╗██║   ██║██╔════╝██╔══██╗██╔════╝
██║     ███████║██████╔╝██║  ██║██║     ██║   ██║██║   ██║█████╗  ██████╔╝███████╗
██║     ██╔══██║██╔══██╗██║  ██║██║     ██║   ██║╚██╗ ██╔╝██╔══╝  ██╔══██╗╚════██║
╚██████╗██║  ██║██║  ██║██████╔╝╚██████╗╚██████╔╝ ╚████╔╝ ███████╗██║  ██║███████║
 ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝  ╚═════╝ ╚═════╝   ╚═══╝  ╚══════╝╚═╝  ╚═╝╚══════╝*/
.cover {
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  margin-bottom: 20px;
  background-color: rgba(25, 25, 25, 0.7);
  color: white;
  text-align: center;
  opacity: 0;
  transition-property: opacity;
  transition-duration: 0.2s;
}

.cover.light {
  background-color: rgba(255, 255, 255, 0.8);
  color: #5a5a5a;
}

/* Visibility and Tangibility */
.cover.active {
  pointer-events: auto;
  opacity: 1;
}

.cover.active.intangible {
  /* Note: in case of drag-and-drop cover, it must be intangible,
           otherwise the moment it appears dragLeave fires*/
  pointer-events: none;
}

/* input.untouchable + cover_message duo makes
   blur-able message box.*/
input.untouchable {
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: 0;
  cursor: default;
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* Style for messages inside the cover
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
.cover .cover_message {
  /* center the message content */
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.cover_message.columns,
.cover_message .columns {
  /* sometimes you want more than one containres */
  display: flex;
  flex-flow: row;
  justify-content: center;
}
.cover_message.columns .center,
.cover_message .columns .center {
  align-self: center;
  margin: 0 5px;
}
.cover_message.columns .bottom,
.cover_message .columns .bottom {
  align-self: flex-end;
  padding-bottom: 20px;
}

.is-dragover .cover.drag_and_drop {
  opacity: 1;
}

/* cover for showing preview animation */
.cover.preview {
  cursor: pointer;
}

.cover.preview:hover {
  background-color: rgba(25, 25, 25, 0.8);
}

.cover.preview img {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.cover.preview .close_preview {
  color: #dedede;
  font-size: 2em;
  float: right;
  margin: 10px 10px;
}

.cover.preview:hover .close_preview {
  color: white;
}

/* -------------------------------------- */
/* -------------------------------------- */
/*           Elements for Player          */
/* -------------------------------------- */
/* -------------------------------------- */
.frame_view {
  position: relative;
  display: block;
  /*width and height set by init_frame_imgs_and_container()*/
  width: 800px;
  height: 500px;
  /*default height so that it will be visible*/
  margin: 0 auto;
}

.frame_view > .fit_block {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.frame_view .stage {
  /* container that hides pile of images that are
     currently not active */
  background-color: #1d1e1f;
  z-index: 1000;
}

.frame_view.wide .cover {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  z-index: 1000;
}

.frame_view.wide .cover span {
  vertical-align: middle;
  color: white;
  font-size: 3em;
}

/*instruction initially hidden*/
.frame_view.wide .cover #msg_instruction {
  display: none;
}

.frame_load {
  position: relative;
}

.frame_load > .strip {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  /*becomes 1 in flip.js*/
}

.frame_load > .strip img {
  position: absolute;
  top: 0;
  left: 0;
  height: 650px;
}

/*pull first one to top*/
/*.frame_view.wide span:nth-of-type(1) > img:nth-of-type(1){
    z-index: 1000;
}*/
.frame_scrubber {
  /* only appears when the play page is rewind mode */
  /* That's when the user hits left arrow key */
  opacity: 1;
  transition-property: opacity;
  transition-duration: 1s;
  width: 100%;
}

.frame_scrubber .timer {
  width: 100%;
  padding: 10px;
  text-align: center;
}

.frame_scrubber .timer .frame_icon {
  display: inline-block;
  width: 15px;
  height: 15px;
  border-radius: 15px;
  border: 1px solid #3c3c3c;
  margin: 0 3px;
}

.frame_scrubber .timer .frame_icon.on {
  background-color: #3c3c3c;
}

.frame_scrubber .timer .frame_icon:last-of-type {
  border: 1px solid tomato;
}

.frame_scrubber .timer .frame_icon.on:last-of-type {
  background-color: tomato;
}

.frame_scrubber .cell_fill {
  display: inline-block;
  height: 8px;
  margin-bottom: -10px;
  /*height of .cell*/
  width: 0%;
  /*filled up in flip.js */
  /*background-color: tomato;*/
  background-color: tomato;
  float: left;
  transition-property: width;
  transition-duration: 0.2s;
}

.frame_scrubber .cell_fill.loaded {
  background-color: #432424;
}

.frame_scrubber .cell_container {
  display: flex;
  flex-wrap: nowrap;
  flex-direction: row;
  justify-content: flex-start;
  background-color: #0b0b0b;
  width: 100%;
}
.frame_scrubber .cell_container .cell {
  position: relative;
  flex-grow: 1;
  height: 8px;
  border: 1px solid #1d1e1f;
  border-top: 8px solid #1d1e1f;
  border-bottom: 8px solid #1d1e1f;
  margin: -8px 0 -8px 0;
  /*reposition due to thick border*/
  box-sizing: content-box;
}
.frame_scrubber .cell_container .cell:hover {
  background-color: white;
}

.scrubber_tooltip {
  display: inline-block;
  position: absolute;
  pointer-events: none;
  background-color: #393939;
  padding: 10px 0px;
  width: 100px;
  text-align: center;
  /*margin-top:20px;*/
  /*Stopped working*/
  color: #b0b0b0;
  /* for centering*/
  transform: translateX(-25%);
  /* For visibility and animation */
  opacity: 0;
  transition-property: opacity, left;
  transition-duration: 0.2s;
  z-index: 1000;
}

.scrubber_tooltip.active {
  opacity: 1;
}

.scrubber_tooltip::after {
  position: absolute;
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
  content: "";
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 10px solid #393939;
}

.ui-sortable-placeholder {
  /* Placeholder container when you've lifted a sortable*/
  /* This is the default class used for sortable,
  but you can use the same class as a custom container too*/
  width: 200px;
  /*Width of all thumb tiles*/
  min-height: 100px;
  margin: 10px;
  /*Margin around the tiles. See lists.css*/
  background-color: #a0a0a0;
}

.ui-sortable-helper {
  -ms-transform: rotate(3deg);
  /* IE 9 */
  -webkit-transform: rotate(3deg);
  /* Safari 3-8 */
  transform: rotate(3deg);
}

body.dark {
  background-color: #1d1e1f;
  color: #777777;
}

body.dark_justcolor {
  background-color: #a6a4a3;
}

body.dark.glow {
  background-image: url("img/bg_dark_glow.jpg");
  background-size: cover;
}

body.dark .footer span {
  background-color: #141414;
  color: #808080;
}

.far,
.fas {
  margin: 0 5px;
}

a {
  color: #da8d8d;
  transition-property: color;
  transition-duration: 0.2s;
}

a:hover {
  /*color: #e65f89;*/
  color: #bd4168;
  text-decoration: none;
}

button {
  padding: 10px 15px;
  margin: 5px;
  border: 0px solid;
  border-radius: 8px 18px;
  border-bottom: 4px solid #615154;
  background-color: #826e72;
  font-size: 14pt;
  color: white;
}

button:hover {
  background-color: #6a5458;
}

button:focus {
  outline: none;
}

button.warning {
  background-color: #e85f53;
  border-color: #bf5151;
}

button.warning:hover {
  background-color: #ec3b3b;
}

button.action {
  background-color: #7079a4;
  border-color: #575e80;
}

button.action:hover {
  background-color: #575e80;
}

button.disabled {
  pointer-events: none;
  margin-top: 9px;
  border: 0px solid;
  background-color: #b9b9b9;
  color: #dedede;
}

.button.flat {
  padding: 7px 12px;
  border: 1px solid #da8d8d;
  border-radius: 4px 10px;
  color: #da8d8d;
  transition-property: color, border;
  transition-duration: 0.2s;
}

.button.flat:hover {
  border-color: #bd4168;
  color: #bd4168;
}

input[type=text] {
  padding: 5px 6px;
  border-radius: 5px;
}

/* note: '.menu_btn' is in menu.css */
.tool_btn {
  /* this component can be inline, or position:absolute;*/
  font-size: 10pt;
  color: #ffffff8f;
  padding: 8px;
  margin: 5px;
  background-color: #00000036;
  border-radius: 5px;
  border: 1px solid #ffffff00;
  cursor: pointer;
}

.tool_btn.compact {
  font-size: 8pt;
  padding: 6px;
  margin: 0 7px;
}

.tool_btn:not(.loading):hover {
  color: white;
  border: 1px solid #ffffff52;
}

.tool_btn.loading {
  background-color: transparent;
  color: #bba2da;
}

.tool_btn.green {
  background-color: #ade8c7;
}

.editable_text {
  /* TODO: Very similar to 'editable_field' in _compomnents. */
  /*		 Two should be united into _ui */
  position: relative;
  display: inline-block;
}

.editable_text input {
  border: 2px solid transparent;
  padding: 2px 6px;
}

.editable_text input:hover {
  background-color: #00000012;
  cursor: pointer;
}

.editable_text input:focus {
  outline: none;
  border-top: 2px solid #b6b0b9;
  border-left: 2px solid #b6b0b9;
  background-color: #e7e4ff;
  cursor: text;
}

/* text decorations */
.align_right {
  text-align: right;
}

.divider {
  display: inline-block;
  border-left: 1px solid #00000029;
  height: 100%;
  width: 1px;
  margin: 0px 10px;
  color: transparent;
}

.demo_modal {
  position: fixed;
  pointer-events: none;
  top: 50%;
  left: 50%;
  text-align: left;
  transform: translate(-50%, -50%);
  color: white;
  z-index: 100;
  opacity: 0;
  transition-property: opacity;
  transition-duration: 0.2s;
}
.demo_modal .message_wrapper {
  display: inline-block;
  background-color: #434141eb;
  padding: 10px 35px 30px 35px;
  border-radius: 10px;
}
.demo_modal .message_wrapper::after {
  display: block;
  content: "< Click anywhere to close > ";
  color: #ffb9b9;
  text-align: right;
}
.demo_modal strong {
  font-weight: normal;
  color: #e48060;
}

.demo_modal.active {
  opacity: 1;
}

.demoguide {
  /* button*/
  background-color: #575757;
  color: #a4ffc5;
  border-color: #303030;
}

.demoguide:hover {
  background-color: #627270;
  color: #a9ffe4;
}

/*# sourceMappingURL=output.css.map */

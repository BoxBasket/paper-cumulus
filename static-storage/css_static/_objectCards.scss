/* -------------------------------------- */
/* -------------------------------------- */
/*               scene list               */
/* -------------------------------------- */
/* -------------------------------------- */


ul.list_scenes{
    display:flex;
    flex-wrap: wrap;
    
    margin: 0; padding: 0;
    list-style: none;
}

ul.list_scenes .scene_container{ /*flex item*/
    display:flex;
    flex-direction: column;
    
    /* flex: 1; make all container same width*/
    /*min-width: 200px;
    max-width: 210px;*/
    
    /* Or just set a width */
    width: 240px;
    margin: 3px;

    color: white;

}

ul.list_scenes .scene_container:hover{
    background-color: black;
}

.scene_container .flex_item:last-child{
    margin-top: auto; /*flushes to the bottom*/
}

.scene_container .header{
    padding: 3px 12px 10px 12px;
    background-color:#2f2f2f;
    color: #7d7d7d;

    transition-property: background-color, color;
    transition-duration: 0.3s;
}

.scene_container:hover .header{
    color: white;
    background-color: black;
}

.scene_container .header a{
    text-decoration: none;
}


.scene_container .preview_container{
    /* big <a> */
    position: relative;
    overflow: hidden;
    height: 150px;
    /* width set to be even at .scene_container*/
    
    
    box-sizing: border-box;
    border-top: 20px solid #2f2f2f;
    border-bottom: 20px solid #2f2f2f;
    background-color: #2f2f2f;
    
    transition-property: border;
    transition-duration: 0.3s;
}

.scene_container:hover .preview_container{
    border-top: 30px solid black;
    border-bottom: 30px solid black;
}

.scene_container .preview_container .preview{
    position: absolute;
    display:inline-block;
    width: 100%; 
   
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
}



.scene_container .description{
    padding: 8px;
    color: #9c9c9c;
}

.scene_container .timestamp{
    padding: 3px;
}






/* -------------------------------------- */
/* -------------------------------------- */
/*            scene list MINI             */
/* -------------------------------------- */
/* -------------------------------------- */


ul.list_scenes_mini{
    display:flex;
    flex-flow: column;
    justify-content: center;
    
    margin: 20px 0 0 0; 
    padding: 0;
    list-style: none;
}


ul.list_scenes_mini li{
    margin: 0 auto;

}


ul.list_scenes_mini li .preview{
    position :relative;
    display:inline-block;
    height: 70px;
    width: 70px;
    overflow: hidden; 

    border: 3px solid transparent;
    border-radius: 3px;

}

ul.list_scenes_mini li .preview.current{
    pointer-events: none;
    border: 3px solid #d8abab;
}


ul.list_scenes_mini li .preview:hover{
    border: 3px solid #ff8982;
}

ul.list_scenes_mini li .preview span{
    width: 100%;
}

ul.list_scenes_mini li .preview img{

}







/* -------------------------------------- */
/* -------------------------------------- */
/*               strip lists             */
/* -------------------------------------- */
/* -------------------------------------- */

ul.list_strips{
    padding: 0;
    counter-reset: stripNum;
}


ul.list_strips li.strip_card{ 
    
    display:flex;
    flex-direction: column;
    align-items: stretch;
    
    position: relative;
    
    counter-increment: stripNum;
    
    border-bottom: 5px solid #c5c5c5;
    margin-bottom: 10px;
    
}

ul.list_strips li.spotlighted{
    /* raises z-index above the lightbox cover */
    z-index: 1000; 
}


.strip_card.draggable-mirror .strip_flex_toolbar,
.strip_card.draggable-mirror .strip_content
{
    /* transform on this doesn't work on .draggable-mirror directly
       because transform property already taken by draggable js*/
    transform: rotate(3deg); 
}

.strip_card.draggable-source--is-dragging .strip_flex_toolbar,
.strip_card.draggable-source--is-dragging .strip_content
{
    opacity: 0;
    
}

.strip_card.draggable-source--is-dragging{
    opacity: 0.3;
    background-color: black;
}

.strip_card.draggable--over{

}




.strip_content{
    /*I added this container to wrap .strip_flex_container 
    due to nesting issue when rendering in React */

    position :relative;


}

.strip_flex_container{
    /*Main flex container for a single srip*/
    position: relative;
    display:flex;
    flex-wrap: wrap;
    flex-direction: row;
    align-items: stretch;
    
    background-color: white;
}

.strip_flex_container:focus {
    outline: none;
}


/*
███████╗██████╗  █████╗ ███╗   ███╗███████╗████████╗██╗  ██╗██╗   ██╗███╗   ███╗██████╗ 
██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝╚══██╔══╝██║  ██║██║   ██║████╗ ████║██╔══██╗
█████╗  ██████╔╝███████║██╔████╔██║█████╗     ██║   ███████║██║   ██║██╔████╔██║██████╔╝
██╔══╝  ██╔══██╗██╔══██║██║╚██╔╝██║██╔══╝     ██║   ██╔══██║██║   ██║██║╚██╔╝██║██╔══██╗
██║     ██║  ██║██║  ██║██║ ╚═╝ ██║███████╗   ██║   ██║  ██║╚██████╔╝██║ ╚═╝ ██║██████╔╝
╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚═════╝ */
                                                                                        

.strip_flex_container .thumb,
.strip_flex_container .tile{
    display: flex;
    position: relative; /*allows mini menu*/
    align-items: center;
    justify-content: center;
    
    margin: 10px 5px;
    height: auto; /*stretches to fit the flex container */

    border:1px solid #f1f1f1;
    border-bottom :3px solid #dddddd;
}


.thumb:focus {
    outline: none;
}

.thumb .frame_image{
    cursor: pointer;
    position: absolute;
    top: 0; left:0;
    width: 100%; height: 100%;
    
    overflow: hidden;
    background-size: contain;
    background-repeat: no-repeat;
}

.thumb .frame_image.stretch{
    /* used to stretch the container size to fit the thumbnail */
    position: relative;
    opacity: 0;

    min-width:110px;
}

/* sortable style*/


.thumb.draggable-mirror .frame_image{
    /* transform on this doesn't work on .draggable-mirror directly
       because transform property already taken by draggable js*/
    transform: rotate(7deg); 
}

.thumb.draggable-source--is-dragging{
    opacity: 0.5;
}
.thumb.draggable--over{
    opacity: 0.5;
}

.thumb .overlay_box{
    position:absolute;
    top:-15px; left:0;
    display: block;
    width: 100%;
    background-color: rgba(0,0,0,0.5);
    text-align: right;
    
    padding: 3px 5px;
    color: white;
    
    opacity: 0;
    
    transition-property: opacity top;
    transition-duration: 0.2s;
    
}

.thumb:hover .overlay_box{
    /*small menu that pops up when you hover over .thumb*/
    opacity: 1;
    top: 0px;

    z-index: 1; /*places it over the "slashes" layer */
}    

.thumb:hover .overlay_box a{
    color: white;
    font-size: 1.2em;
    margin: 0px 2px;
}    
.thumb:hover .overlay_box a:hover{
    text-decoration: none;
    color: #bcf2f2;
}    



.thumb .slashes{
    pointer-events: none;
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background-image: url('img/slashes.png');

    opacity: 0;
}

.thumb.ignore .slashes{
    opacity: 1;
}


.thumb.dying {
    /* this is when thumb is about to be deleted */
    background-color: black;
}
.thumb.dying .frame_image{
    opacity: 0.5;
}


.thumb .overlay_box .mini_menu{
    /*small menu that pops up when you hover over .thumb*/
   
    font-size: 1.2em;
}   

.thumb.placeholder{
    /* style for .thumb box that has no image */
    width: 150px;
    height: 100%;
    border: 3px dashed #d8cece;
    background-color: #ededed;
}









.strip_flex_toolbar{
    display: flex;
    justify-content: space-between;
    align-items: center;
 
    padding: 8px 12px;

    text-align: right;
    background-color: white;
    border-bottom: 1px solid #ddd;
}

.strip_card .strip_flex_toolbar .tools{
    opacity: 0.1;
    
    transition-property: opacity;
    transition-duration: 0.2s;

}

.strip_flex_toolbar .menu_btn{ 
    /* icon size */
    font-size: 1.6em;
    margin: 0 4px;
    color: #859297; cursor:pointer;
}
.strip_flex_toolbar .menu_btn:hover{ color: #545b5d; text-decoration: none;}


.menu_btn.disabled{ opacity: 0.5; }
.menu_btn.disabled:hover{ color: #859297; cursor:default; }


.strip_card:hover .strip_flex_toolbar .tools{
    opacity:1;
}







/*modified thumb or tile*/

.strip_flex_container .thumb.incompatible{

    
    /* This was a quick and easy way to make the .thumb slender
       but this also prevents popup menu from being visible*/
    /* overflow: hidden;*/
    
    border-left: 5px solid red;
}

.strip_flex_container .thumb.incompatible img{
    -webkit-filter: grayscale(1);
    filter: grayscale(1);
}

.strip_flex_container .thumb.placeholder2{
    
    border:3px solid #d8abab;
    background-color: #ffe8e0;
    
    width: 120px;
    height: auto;
}

.strip_flex_container .thumb.placeholder2 span{
    color: #af6262;
}

.strip_flex_container .tile[displaytype="add"]{

    background-color: #D1D1D1;
    
    /*width: 60px;*/
    padding: 0 10px;
    height: auto;
    color: #545454;
    
    cursor: pointer;
}

.strip_flex_container .tile[displaytype="add"]:hover{
    
    background-color: #bcbcbc;
}

ul.list_strips .strip_flex_container .tile.empty-strip{
    border: 0px solid;
    width: 100%;
}

.strip_flex_container .tile.empty-strip span{
    width: 100%;
    height: 100px;
    text-align: center;
}

.strip_flex_editor{
    border-top: 1px solid #ddd;
    background-color: #f5f5f5;
    padding: 10px;
}



/* loading strips. Just gray blocks */

ul.loading_strips li{
    display:inline-block;
    height: 150px; width: 100%;
    margin-bottom: 20px;

    background-color: #c7c7c7;
}





/*
 ██████╗ █████╗ ██████╗ ██████╗  ██████╗ ██████╗ ██╗   ██╗███████╗██████╗ ███████╗
██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔═══██╗██║   ██║██╔════╝██╔══██╗██╔════╝
██║     ███████║██████╔╝██║  ██║██║     ██║   ██║██║   ██║█████╗  ██████╔╝███████╗
██║     ██╔══██║██╔══██╗██║  ██║██║     ██║   ██║╚██╗ ██╔╝██╔══╝  ██╔══██╗╚════██║
╚██████╗██║  ██║██║  ██║██████╔╝╚██████╗╚██████╔╝ ╚████╔╝ ███████╗██║  ██║███████║
 ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝  ╚═════╝ ╚═════╝   ╚═══╝  ╚══════╝╚═╝  ╚═╝╚══════╝*/
                                                                                  
                                                                                  
.cover{
    pointer-events: none;
    position: absolute;
    top: 0; left:0;
      
    height: 100%;
    width: 100%;

    margin-bottom: 20px;
    background-color: rgba(25, 25, 25, 0.7);
    color: white;
    text-align: center;

    opacity:0;

    transition-property: opacity;
    transition-duration: 0.2s;
}

.cover.light{
    background-color: rgba(255, 255, 255, 0.80);
    color: #5a5a5a;
}




/* Visibility and Tangibility */

.cover.active{
    pointer-events: auto;
    opacity: 1;
}

.cover.active.intangible{
    /* Note: in case of drag-and-drop cover, it must be intangible,
             otherwise the moment it appears dragLeave fires*/
    pointer-events: none;
}



/* input.untouchable + cover_message duo makes
   blur-able message box.*/

input.untouchable{
    pointer-events: none;
    position: absolute;
    top: 0; left: 0;
      
    height: 100%;
    width: 100%;
    opacity: 0;

    cursor: default;
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* Style for messages inside the cover
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

.cover .cover_message{
    /* center the message content */
    height: 100%;
    width: 100%;

    display:flex;
    flex-direction: column;
    justify-content: center;
}



/*.cover.drag_and_drop,
.cover.file_upload,
.cover.preview{
  
  transition-property: opacity;
  transition-duration: 0.15s;
  transition-timing-function: ease-in;
  
  low-tech solution to prevent flickering when drag related event fires
     over children object. The ease-in makes the flickering much milder

    NOTE: probably don't need this anymore now that I have a better
          way of detecting and changing state of covers
  
}*/



.cover.file_upload{
    /* This needs to apply dynamically unfortunately */
    /*pointer-events: auto;*/
    background-color: rgba(237, 237, 237, 0.9);
    color: #984242;
}

.is-dragover .cover.drag_and_drop{
  opacity: 1;
}

/* prevent flickering */
/* Downside: this makes the drag events a bit unstable. 
   makes dragleave fire rapidly sometimes */
/* after some investigation, realized it's the .thumb that is causing issue */
/*.is-dragover .thumb { pointer-events:none; }*/

.cover.file_upload span{
  position: absolute;
  top: 50%; left: 50%;
  
  transform: translate(-50%, -50%);
}


/* cover for showing preview animation */
.cover.preview{
    cursor: pointer;
}
.cover.preview:hover{
    background-color: rgba(25, 25, 25, 0.8);
}

.cover.preview img{
    position: absolute;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
}

.cover.preview .close_preview{
    color: #dedede;
    font-size: 2em;
    float: right;
    margin: 10px 10px;
}

.cover.preview:hover .close_preview{
    color: white;
}